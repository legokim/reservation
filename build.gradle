buildscript {
    ext {
        springBootVersion = '2.1.0.RELEASE'
    }
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath(group: 'com.cinnober.gradle', name: 'semver-git', version: '2.2.0')
        classpath("de.aaschmid:gradle-cpd-plugin:1.0")
        classpath(group: 'com.ewerk.gradle.plugins.querydsl', name: 'com.ewerk.gradle.plugins.querydsl.gradle.plugin', version: '1.0.10', ext: 'pom')
    }
}

def querydslVersion = "4.1.4"
//querydsl {
//    library = "com.querydsl:querydsl-apt:$querydslVersion"
//    querydslDefault = true
//    jpa = true
//}

apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'pmd'
apply plugin: 'checkstyle'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'
apply plugin: 'cpd'

group = 'com.app'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

ext {
    springCloudVersion = 'Dalston.SR4'
}


repositories {
    mavenCentral()
}

configurations {
    providedRuntime
    querydslapt
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
    }
}



dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-rest')
    compile('org.springframework.boot:spring-boot-starter-integration')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    runtime('org.springframework.boot:spring-boot-devtools')
    runtime('com.h2database:h2')
    compile('org.projectlombok:lombok')
    providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
    testCompile('org.springframework.security:spring-security-test')

    compile("org.modelmapper.extensions:modelmapper-spring:0.7.5")
    compile("org.mybatis.spring.boot:mybatis-spring-boot-starter:1.2.0")
    compile('io.vavr:vavr-test:0.9.2')

    compile('io.springfox:springfox-swagger2:2.8.0')
    compile('io.springfox:springfox-swagger-ui:2.8.0')

    compile("com.querydsl:querydsl-core:$querydslVersion")
    compile("com.querydsl:querydsl-jpa:$querydslVersion")
    compile("com.querydsl:querydsl-sql:$querydslVersion")
}

jacoco {
    toolVersion = '0.8.2'
}

pmd {
    toolVersion = '5.6.1'
    ruleSets = ["java-basic", "java-braces", "java-unnecessary", "java-empty"]
    sourceSets = [project.sourceSets.main]
    ignoreFailures = true
}

checkstyle {
    toolVersion = '8.8'
    configFile = 'checkstyle.xml' as File
    sourceSets = [project.sourceSets.main, project.sourceSets.test]
    ignoreFailures = true
}

cpdCheck {
    reports {
        xml.enabled = true
    }
    source = sourceSets.main.allJava
}